########################################
#  This file was generated by hdlmake  #
#  http://ohwr.org/projects/hdl-make/  #
#  v         #
########################################

TOP_MODULE := tb_cvi_ciris

MODELSIM_INI_PATH := D:\intelFPGA\questasim64_2021.1\win64\..

VCOM_FLAGS := -quiet -modelsimini modelsim.ini 
VSIM_FLAGS := 
VLOG_FLAGS := -quiet -modelsimini modelsim.ini 
VMAP_FLAGS := -modelsimini modelsim.ini 
#target for performing local simulation
local: sim_pre_cmd simulation sim_post_cmd

VERILOG_SRC := ..\..\..\rtl\bt601_decoder.sv \
..\..\..\rtl\bt656_decoder.sv \
..\..\..\rtl\bt_to_avst.sv \
..\..\..\rtl\cvi_ciris.sv \
..\..\..\tb\tb_cvi_ciris\tb_cvi_ciris.sv \
..\..\..\..\..\..\common\common_lib2\fifo\crs_lib_dc_fifo\rtl\crs_lib_dc_fifo.sv \
..\..\..\..\..\..\common\common_lib2\ram\async_ram\rtl\crs_lib_async_ram.sv \
..\..\..\..\..\..\common\common_lib\rtl\alt_vipvfr131_common_control_packet_encoder.v \
..\..\..\..\..\..\common\common_lib\rtl\alt_vipvfr131_common_stream_output.v \

VERILOG_OBJ := work\bt601_decoder\.bt601_decoder_sv \
work\bt656_decoder\.bt656_decoder_sv \
work\bt_to_avst\.bt_to_avst_sv \
work\cvi_ciris\.cvi_ciris_sv \
work\tb_cvi_ciris\.tb_cvi_ciris_sv \
work\crs_lib_dc_fifo\.crs_lib_dc_fifo_sv \
work\crs_lib_async_ram\.crs_lib_async_ram_sv \
work\alt_vipvfr131_common_control_packet_encoder\.alt_vipvfr131_common_control_packet_encoder_v \
work\alt_vipvfr131_common_stream_output\.alt_vipvfr131_common_stream_output_v \

VHDL_SRC := 
VHDL_OBJ := 
INCLUDE_DIRS :=
LIBS := work
LIB_IND := work\.work

simulation: modelsim.ini $(LIB_IND) $(VERILOG_OBJ) $(VHDL_OBJ)
$(VERILOG_OBJ): modelsim.ini
$(VHDL_OBJ): $(LIB_IND) modelsim.ini

modelsim.ini: $(MODELSIM_INI_PATH)\modelsim.ini
		copy $< . 2>&1
work\.work:
	(vlib work && vmap $(VMAP_FLAGS) work && type nul >> work\.work) || del /s /q /f work

work\bt601_decoder\.bt601_decoder_sv: ..\..\..\rtl\bt601_decoder.sv
		vlog -work work $(VLOG_FLAGS) -sv $(INCLUDE_DIRS) $<
		@mkdir $(dir $@) && type nul >> $@


work\bt656_decoder\.bt656_decoder_sv: ..\..\..\rtl\bt656_decoder.sv
		vlog -work work $(VLOG_FLAGS) -sv $(INCLUDE_DIRS) $<
		@mkdir $(dir $@) && type nul >> $@


work\bt_to_avst\.bt_to_avst_sv: ..\..\..\rtl\bt_to_avst.sv \
work\crs_lib_dc_fifo\.crs_lib_dc_fifo_sv
		vlog -work work $(VLOG_FLAGS) -sv $(INCLUDE_DIRS) $<
		@mkdir $(dir $@) && type nul >> $@


work\cvi_ciris\.cvi_ciris_sv: ..\..\..\rtl\cvi_ciris.sv \
work\bt601_decoder\.bt601_decoder_sv \
work\bt656_decoder\.bt656_decoder_sv \
work\bt_to_avst\.bt_to_avst_sv \
work\alt_vipvfr131_common_control_packet_encoder\.alt_vipvfr131_common_control_packet_encoder_v \
work\alt_vipvfr131_common_stream_output\.alt_vipvfr131_common_stream_output_v
		vlog -work work $(VLOG_FLAGS) -sv $(INCLUDE_DIRS) $<
		@mkdir $(dir $@) && type nul >> $@


work\tb_cvi_ciris\.tb_cvi_ciris_sv: ..\..\..\tb\tb_cvi_ciris\tb_cvi_ciris.sv \
work\cvi_ciris\.cvi_ciris_sv
		vlog -work work $(VLOG_FLAGS) -sv $(INCLUDE_DIRS) $<
		@mkdir $(dir $@) && type nul >> $@


work\crs_lib_dc_fifo\.crs_lib_dc_fifo_sv: ..\..\..\..\..\..\common\common_lib2\fifo\crs_lib_dc_fifo\rtl\crs_lib_dc_fifo.sv \
work\crs_lib_async_ram\.crs_lib_async_ram_sv \
..\..\..\..\..\..\common\common_lib2\common\crs_define.svh
		vlog -work work $(VLOG_FLAGS) -sv $(INCLUDE_DIRS) $<
		@mkdir $(dir $@) && type nul >> $@


work\crs_lib_async_ram\.crs_lib_async_ram_sv: ..\..\..\..\..\..\common\common_lib2\ram\async_ram\rtl\crs_lib_async_ram.sv
		vlog -work work $(VLOG_FLAGS) -sv $(INCLUDE_DIRS) $<
		@mkdir $(dir $@) && type nul >> $@


work\alt_vipvfr131_common_control_packet_encoder\.alt_vipvfr131_common_control_packet_encoder_v: ..\..\..\..\..\..\common\common_lib\rtl\alt_vipvfr131_common_control_packet_encoder.v
		vlog -work work $(VLOG_FLAGS)  $(INCLUDE_DIRS) $<
		@mkdir $(dir $@) && type nul >> $@


work\alt_vipvfr131_common_stream_output\.alt_vipvfr131_common_stream_output_v: ..\..\..\..\..\..\common\common_lib\rtl\alt_vipvfr131_common_stream_output.v
		vlog -work work $(VLOG_FLAGS)  $(INCLUDE_DIRS) $<
		@mkdir $(dir $@) && type nul >> $@


# USER SIM COMMANDS
sim_pre_cmd:
		
sim_post_cmd:
		vsim -voptargs=+acc -do vsim.do -i tb_cvi_ciris

CLEAN_TARGETS := $(LIBS) modelsim.ini transcript

clean:
		del /s /q /f $(CLEAN_TARGETS)
		@-rmdir /s /q $(CLEAN_TARGETS) >nul 2>&1
mrproper: clean
		del /s /q /f *.vcd *.wlf

.PHONY: mrproper clean sim_pre_cmd sim_post_cmd simulation
